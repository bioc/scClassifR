% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R, R/support.R
\name{checkObjectValidity}
\alias{checkObjectValidity}
\alias{checkCellTypeValidity}
\alias{checkFeaturesValidity}
\alias{checkParentValidity}
\alias{checkPThresValidity}
\alias{checkClassifierValidity}
\alias{parent<-}
\alias{clf<-}
\alias{features<-}
\alias{balance_dataset}
\alias{train_func}
\alias{transform_to_zscore}
\alias{load_models}
\alias{select_features}
\alias{check_parent_child_coherence}
\alias{filter_cells}
\alias{filter_cells,Seurat-method}
\alias{filter_cells,SingleCellExperiment-method}
\alias{construct_tag_vect}
\alias{construct_tag_vect,Seurat-method}
\alias{construct_tag_vect,SingleCellExperiment-method}
\alias{process_parent_clf}
\alias{process_parent_clf,Seurat-method}
\alias{process_parent_clf,SingleCellExperiment-method}
\alias{make_prediction}
\alias{simplify_prediction}
\alias{verify_parent}
\alias{test_performance}
\title{Internal functions of scClassifR package}
\usage{
checkObjectValidity(object)

checkCellTypeValidity(cell_type)

checkFeaturesValidity(features)

checkParentValidity(parent)

checkPThresValidity(p_thres)

checkClassifierValidity(clf)

parent(classifier) <- value

clf(classifier) <- value

features(classifier) <- value

balance_dataset(mat, tag)

train_func(mat, tag)

transform_to_zscore(mat)

load_models(path_to_models)

select_features(mat, features)

check_parent_child_coherence(
  obj,
  pos_parent,
  parent_cell,
  cell_type,
  target_cell_type,
  ...
)

filter_cells(obj, tag_slot)

\S4method{filter_cells}{Seurat}(obj, tag_slot)

\S4method{filter_cells}{SingleCellExperiment}(obj, tag_slot)

construct_tag_vect(obj, cell_type, ...)

\S4method{construct_tag_vect}{Seurat}(obj, cell_type, tag_slot)

\S4method{construct_tag_vect}{SingleCellExperiment}(obj, cell_type, tag_slot)

process_parent_clf(
  obj,
  parent_tag_slot,
  parent_cell_type,
  parent_clf,
  path_to_models,
  zscore = TRUE,
  ...
)

\S4method{process_parent_clf}{Seurat}(
  obj,
  parent_tag_slot,
  parent_cell_type,
  parent_clf,
  path_to_models,
  zscore = TRUE,
  seurat_assay,
  seurat_slot,
  ...
)

\S4method{process_parent_clf}{SingleCellExperiment}(
  obj,
  parent_tag_slot,
  parent_cell_type,
  parent_clf,
  path_to_models,
  zscore = TRUE,
  sce_assay,
  ...
)

make_prediction(mat, classifier, pred_cells, ignore_ambiguous_result = TRUE)

simplify_prediction(meta.data, mat, classifiers)

verify_parent(mat, classifier, meta.data)

test_performance(mat, classifier, tag)
}
\arguments{
\item{object}{The request classifier to check.}

\item{cell_type}{name of cell type}

\item{features}{list of selected features}

\item{parent}{Classifier parent to check.}

\item{p_thres}{Classifier probability threshold to check.}

\item{clf}{Classifier to check.}

\item{classifier}{classifier}

\item{value}{the new classifier}

\item{mat}{expression matrix}

\item{tag}{tag of data}

\item{path_to_models}{path to databases, or by default}

\item{obj}{object}

\item{pos_parent}{a vector indicating parent clf prediction}

\item{parent_cell}{name of parent cell type}

\item{target_cell_type}{alternative cell types (in case of testing clf)}

\item{...}{arguments passed to other methods}

\item{tag_slot}{tag slot in \code{\link{SingleCellExperiment}} object 
indicating cell type}

\item{parent_tag_slot}{string, name of annotation tag slot in object 
indicating pre-assigned/predicted parent cell type}

\item{parent_cell_type}{name of parent cell type}

\item{parent_clf}{\code{\link{scClassifR}} object corresponding 
to classification model for the parent cell type}

\item{zscore}{boolean indicating the transformation of gene expression 
in object to zscore or not}

\item{seurat_assay}{name of assay to use in \code{\link{Seurat}} object}

\item{seurat_slot}{type of expression data to use in 
\code{\link{Seurat}} object}

\item{sce_assay}{name of assay to use 
in \code{\link{SingleCellExperiment}} object}

\item{pred_cells}{a whole prediction for all cells}

\item{ignore_ambiguous_result}{whether ignore ambigouous result}

\item{meta.data}{object meta data}

\item{classifiers}{classifiers}
}
\value{
TRUE if the classifier is valid or the reason why it is not

TRUE if the cell type is valid or the reason why it is not.

TRUE if the features is valid or the reason why it is not.

TRUE if the parent is valid or the reason why it is not.

TRUE if the p_thres is valid or the reason why it is not.

TRUE if the classifier is valid or the reason why it is not.

scClassifR object with the new parent.

scClassifR object with the new trained classifier.

scClassifR object with the new features.

a list of balanced count matrix
and corresponding tags of balanced count matrix

the classification model (caret object)

row wise center-scaled count matrix

list of classifiers

filtered matrix

list of adjusted object and adjusted tag slot

adjusted \code{\link{Seurat}} object

adjusted \code{\link{SingleCellExperiment}} object

a binary vector for cell tag

list of cells which are positive to parent clf

prediction

simplified prediction

applicable matrix

clf performance
}
\description{
Check if a scClassifR object is valid

Filter cells from ambiguous chars and 
non applicable cells in a \code{\link{Seurat}} object

Filter cells from ambiguous chars and non applicable cells
in a \code{\link{SingleCellExperiment}} object

Construct a uniform tag vector for all forms of labels 
in a \code{\link{Seurat}} object

Construct a uniform tag vector for all forms of labels
in a \code{\link{SingleCellExperiment}} object

Process parent classifier in a \code{\link{Seurat}} object

Process parent classifier in 
a \code{\link{SingleCellExperiment}} object
}
