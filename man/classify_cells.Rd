% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifier.R
\name{classify_cells}
\alias{classify_cells}
\alias{classify_cells,Seurat-method}
\alias{classify_cells,SingleCellExperiment-method}
\title{Classify cells from multiple models}
\usage{
classify_cells(
  classify_obj,
  classifiers = NULL,
  cell_types = "all",
  chunk_size = 5000,
  path_to_models = c("default", "."),
  ignore_ambiguous_result = FALSE,
  cluster_slot = NULL,
  ...
)

\S4method{classify_cells}{Seurat}(
  classify_obj,
  classifiers = NULL,
  cell_types = "all",
  chunk_size = 5000,
  path_to_models = c("default", "."),
  ignore_ambiguous_result = FALSE,
  cluster_slot = "seurat_clusters",
  seurat_assay = "RNA",
  seurat_slot = "counts",
  ...
)

\S4method{classify_cells}{SingleCellExperiment}(
  classify_obj,
  classifiers = NULL,
  cell_types = "all",
  chunk_size = 5000,
  path_to_models = c("default", "."),
  ignore_ambiguous_result = FALSE,
  sce_assay = "logcounts",
  cluster_slot = NULL,
  ...
)
}
\arguments{
\item{classify_obj}{the object containing cells to be classified}

\item{classifiers}{list of classification models. 
The model is obtained from train_classifier function or available in current 
working space. 
Users may test the model using test_classifier before using this function.
If classifiers contain classifiers for sub cell types, classifiers for
parent cell type must be indicated first in order to be applied before
children classifiers.
If classifiers is NULL, the method will use all classifiers in database.}

\item{cell_types}{list of cell types containing models to be used
for classification, only applicable if the models have been saved to package.}

\item{chunk_size}{size of data chunks to be predicted separately.
This option is recommended for large datasets to reduce running time.
Default value at 5000, because smaller datasets can be predicted rapidly.}

\item{path_to_models}{path to the folder containing the list of models. 
As default value, the pretrained models in the package will be used. 
If user has trained new models, indicate the folder containing the 
new_models.rda file.}

\item{ignore_ambiguous_result}{return all ambiguous predictions
(multiple cell types) to empty
When this parameter turns to TRUE, 
most probably predicted cell types will be ignored.}

\item{cluster_slot}{name of slot in meta data containing cluster 
information, in case users want to have additional cluster-level 
prediction}

\item{...}{arguments passed to other methods}

\item{seurat_assay}{name of assay to use in 
\code{\link{Seurat}} object, defaults to 'RNA' assay.}

\item{seurat_slot}{type of expression data to use in 
\code{\link{Seurat}} object. Some available types are: 
"counts", "data" and "scale.data". 
Default to "counts", which is unnormalized data.}

\item{sce_assay}{name of assay to use in 
\code{\link{SingleCellExperiment}} object, 
defaults to 'logcounts' assay.}
}
\value{
the input object with new slots in cells meta data
New slots are: predicted_cell_type, most_probable_cell_type,
slots in form of [cell_type]_p and [cell_type]_class
}
\description{
Classify cells from multiple models
}
\examples{
# load small example dataset
data("tirosh_mel80_example")

# train one classifier for one cell type, for ex, B cell
# define genes to use to classify this cell type
selected_features_B = c("CD19", "MS4A1", "CD79A")

# train the classifier
set.seed(123)
clf_b <- train_classifier(train_obj = tirosh_mel80_example, 
features = selected_features_B, cell_type = "B cells")

# do the same thing with other cell types, for example, T cells
selected_features_T = c("CD4", "CD8A", "CD8B")
set.seed(123)
clf_t <- train_classifier(train_obj = tirosh_mel80_example, 
features = selected_features_T, cell_type = "T cells")

# create a list of classifiers
classifier_ls <- list(clf_b, clf_t)

# classify cells with list of classifiers
seurat.obj <- classify_cells(classify_obj = tirosh_mel80_example, 
classifiers = classifier_ls)

}
